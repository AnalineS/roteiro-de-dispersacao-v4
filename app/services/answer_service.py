"""
M√≥dulo centralizado para responder perguntas do chatbot farmac√™utico.
Cont√©m a fun√ß√£o principal answer_question, que pode ser importada por diferentes apps.
"""

from typing import Dict


# Exemplo de fun√ß√£o centralizada (ajuste conforme a l√≥gica principal do seu projeto)
def answer_question(
    question: str, persona: str = "professor", session_id: str = None
) -> Dict:
    """
    Gera uma resposta para a pergunta do usu√°rio, considerando a persona e session_id.

    Par√¢metros:
        question (str): Pergunta do usu√°rio.
        persona (str): Persona selecionada (ex: 'professor', 'amigavel').
        session_id (str, opcional): ID da sess√£o do usu√°rio.

    Retorna:
        Dict: Resposta formatada.
    """
    # Aqui voc√™ pode integrar com o pipeline RAG, banco de dados, etc.
    # Exemplo: delegar para o pipeline real se dispon√≠vel
    try:
        from app.rag_system import get_rag_system

        rag_system = get_rag_system()
        resposta = rag_system.generate_response(question, persona, session_id)
        return {"answer": resposta, "persona": persona}
    except Exception as e:
        # Fallback simples
        if persona == "amigavel":
            resposta = f"Ol√°! üòä Sobre sua d√∫vida: {question} ... (resposta amig√°vel)"
        else:
            resposta = f"Resposta t√©cnica para: {question} ... (resposta professor)"
        return {"answer": resposta, "persona": persona, "error": str(e)}
